{"version":3,"file":"/js/laravel-echo-setup.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./node_modules/laravel-echo/dist/echo.js","webpack:///./node_modules/engine.io-parser/build/esm/commons.js","webpack:///./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack:///./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack:///./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack:///./node_modules/engine.io-parser/build/esm/index.js","webpack:///./node_modules/@socket.io/component-emitter/lib/esm/index.js","webpack:///./node_modules/engine.io-client/build/esm/globals.js","webpack:///./node_modules/engine.io-client/build/esm/util.js","webpack:///./node_modules/engine.io-client/build/esm/transport.js","webpack:///./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack:///./node_modules/engine.io-client/build/esm/transports/polling.js","webpack:///./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack:///./node_modules/engine.io-client/build/esm/transports/polling-xhr.js","webpack:///./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack:///./node_modules/engine.io-client/build/esm/transports/index.js","webpack:///./node_modules/engine.io-client/build/esm/transports/webtransport.js","webpack:///./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack:///./node_modules/engine.io-client/build/esm/socket.js","webpack:///./node_modules/socket.io-parser/build/esm/is-binary.js","webpack:///./node_modules/socket.io-parser/build/esm/binary.js","webpack:///./node_modules/socket.io-parser/build/esm/index.js","webpack:///./node_modules/socket.io-client/build/esm/on.js","webpack:///./node_modules/socket.io-client/build/esm/socket.js","webpack:///./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack:///./node_modules/socket.io-client/build/esm/manager.js","webpack:///./node_modules/socket.io-client/build/esm/index.js","webpack:///./node_modules/socket.io-client/build/esm/url.js","webpack:///./resources/js/laravel-echo-setup.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\n/**\r\n * This class represents a basic channel.\r\n */\nvar Channel = /*#__PURE__*/function () {\n  function Channel() {\n    _classCallCheck(this, Channel);\n  }\n\n  _createClass(Channel, [{\n    key: \"listenForWhisper\",\n    value:\n    /**\r\n     * Listen for a whisper event on the channel instance.\r\n     */\n    function listenForWhisper(event, callback) {\n      return this.listen('.client-' + event, callback);\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"notification\",\n    value: function notification(callback) {\n      return this.listen('.Illuminate\\\\Notifications\\\\Events\\\\BroadcastNotificationCreated', callback);\n    }\n    /**\r\n     * Stop listening for a whisper event on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListeningForWhisper\",\n    value: function stopListeningForWhisper(event, callback) {\n      return this.stopListening('.client-' + event, callback);\n    }\n  }]);\n\n  return Channel;\n}();\n\n/**\r\n * Event name formatter\r\n */\nvar EventFormatter = /*#__PURE__*/function () {\n  /**\r\n   * Create a new class instance.\r\n   */\n  function EventFormatter(namespace) {\n    _classCallCheck(this, EventFormatter);\n\n    this.namespace = namespace; //\n  }\n  /**\r\n   * Format the given event name.\r\n   */\n\n\n  _createClass(EventFormatter, [{\n    key: \"format\",\n    value: function format(event) {\n      if (['.', '\\\\'].includes(event.charAt(0))) {\n        return event.substring(1);\n      } else if (this.namespace) {\n        event = this.namespace + '.' + event;\n      }\n\n      return event.replace(/\\./g, '\\\\');\n    }\n    /**\r\n     * Set the event namespace.\r\n     */\n\n  }, {\n    key: \"setNamespace\",\n    value: function setNamespace(value) {\n      this.namespace = value;\n    }\n  }]);\n\n  return EventFormatter;\n}();\n\nfunction isConstructor(obj) {\n  try {\n    new obj();\n  } catch (err) {\n    if (err.message.includes('is not a constructor')) return false;\n  }\n\n  return true;\n}\n\n/**\r\n * This class represents a Pusher channel.\r\n */\n\nvar PusherChannel = /*#__PURE__*/function (_Channel) {\n  _inherits(PusherChannel, _Channel);\n\n  var _super = _createSuper(PusherChannel);\n\n  /**\r\n   * Create a new class instance.\r\n   */\n  function PusherChannel(pusher, name, options) {\n    var _this;\n\n    _classCallCheck(this, PusherChannel);\n\n    _this = _super.call(this);\n    _this.name = name;\n    _this.pusher = pusher;\n    _this.options = options;\n    _this.eventFormatter = new EventFormatter(_this.options.namespace);\n\n    _this.subscribe();\n\n    return _this;\n  }\n  /**\r\n   * Subscribe to a Pusher channel.\r\n   */\n\n\n  _createClass(PusherChannel, [{\n    key: \"subscribe\",\n    value: function subscribe() {\n      this.subscription = this.pusher.subscribe(this.name);\n    }\n    /**\r\n     * Unsubscribe from a Pusher channel.\r\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.pusher.unsubscribe(this.name);\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(event, callback) {\n      this.on(this.eventFormatter.format(event), callback);\n      return this;\n    }\n    /**\r\n     * Listen for all events on the channel instance.\r\n     */\n\n  }, {\n    key: \"listenToAll\",\n    value: function listenToAll(callback) {\n      var _this2 = this;\n\n      this.subscription.bind_global(function (event, data) {\n        if (event.startsWith('pusher:')) {\n          return;\n        }\n\n        var namespace = _this2.options.namespace.replace(/\\./g, '\\\\');\n\n        var formattedEvent = event.startsWith(namespace) ? event.substring(namespace.length + 1) : '.' + event;\n        callback(formattedEvent, data);\n      });\n      return this;\n    }\n    /**\r\n     * Stop listening for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListening\",\n    value: function stopListening(event, callback) {\n      if (callback) {\n        this.subscription.unbind(this.eventFormatter.format(event), callback);\n      } else {\n        this.subscription.unbind(this.eventFormatter.format(event));\n      }\n\n      return this;\n    }\n    /**\r\n     * Stop listening for all events on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListeningToAll\",\n    value: function stopListeningToAll(callback) {\n      if (callback) {\n        this.subscription.unbind_global(callback);\n      } else {\n        this.subscription.unbind_global();\n      }\n\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription succeeds.\r\n     */\n\n  }, {\n    key: \"subscribed\",\n    value: function subscribed(callback) {\n      this.on('pusher:subscription_succeeded', function () {\n        callback();\n      });\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription error occurs.\r\n     */\n\n  }, {\n    key: \"error\",\n    value: function error(callback) {\n      this.on('pusher:subscription_error', function (status) {\n        callback(status);\n      });\n      return this;\n    }\n    /**\r\n     * Bind a channel to an event.\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      this.subscription.bind(event, callback);\n      return this;\n    }\n  }]);\n\n  return PusherChannel;\n}(Channel);\n\n/**\r\n * This class represents a Pusher private channel.\r\n */\n\nvar PusherPrivateChannel = /*#__PURE__*/function (_PusherChannel) {\n  _inherits(PusherPrivateChannel, _PusherChannel);\n\n  var _super = _createSuper(PusherPrivateChannel);\n\n  function PusherPrivateChannel() {\n    _classCallCheck(this, PusherPrivateChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PusherPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n    function whisper(eventName, data) {\n      this.pusher.channels.channels[this.name].trigger(\"client-\".concat(eventName), data);\n      return this;\n    }\n  }]);\n\n  return PusherPrivateChannel;\n}(PusherChannel);\n\n/**\r\n * This class represents a Pusher private channel.\r\n */\n\nvar PusherEncryptedPrivateChannel = /*#__PURE__*/function (_PusherChannel) {\n  _inherits(PusherEncryptedPrivateChannel, _PusherChannel);\n\n  var _super = _createSuper(PusherEncryptedPrivateChannel);\n\n  function PusherEncryptedPrivateChannel() {\n    _classCallCheck(this, PusherEncryptedPrivateChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PusherEncryptedPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n    function whisper(eventName, data) {\n      this.pusher.channels.channels[this.name].trigger(\"client-\".concat(eventName), data);\n      return this;\n    }\n  }]);\n\n  return PusherEncryptedPrivateChannel;\n}(PusherChannel);\n\n/**\r\n * This class represents a Pusher presence channel.\r\n */\n\nvar PusherPresenceChannel = /*#__PURE__*/function (_PusherPrivateChannel) {\n  _inherits(PusherPresenceChannel, _PusherPrivateChannel);\n\n  var _super = _createSuper(PusherPresenceChannel);\n\n  function PusherPresenceChannel() {\n    _classCallCheck(this, PusherPresenceChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PusherPresenceChannel, [{\n    key: \"here\",\n    value:\n    /**\r\n     * Register a callback to be called anytime the member list changes.\r\n     */\n    function here(callback) {\n      this.on('pusher:subscription_succeeded', function (data) {\n        callback(Object.keys(data.members).map(function (k) {\n          return data.members[k];\n        }));\n      });\n      return this;\n    }\n    /**\r\n     * Listen for someone joining the channel.\r\n     */\n\n  }, {\n    key: \"joining\",\n    value: function joining(callback) {\n      this.on('pusher:member_added', function (member) {\n        callback(member.info);\n      });\n      return this;\n    }\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n\n  }, {\n    key: \"whisper\",\n    value: function whisper(eventName, data) {\n      this.pusher.channels.channels[this.name].trigger(\"client-\".concat(eventName), data);\n      return this;\n    }\n    /**\r\n     * Listen for someone leaving the channel.\r\n     */\n\n  }, {\n    key: \"leaving\",\n    value: function leaving(callback) {\n      this.on('pusher:member_removed', function (member) {\n        callback(member.info);\n      });\n      return this;\n    }\n  }]);\n\n  return PusherPresenceChannel;\n}(PusherPrivateChannel);\n\n/**\r\n * This class represents a Socket.io channel.\r\n */\n\nvar SocketIoChannel = /*#__PURE__*/function (_Channel) {\n  _inherits(SocketIoChannel, _Channel);\n\n  var _super = _createSuper(SocketIoChannel);\n\n  /**\r\n   * Create a new class instance.\r\n   */\n  function SocketIoChannel(socket, name, options) {\n    var _this;\n\n    _classCallCheck(this, SocketIoChannel);\n\n    _this = _super.call(this);\n    /**\r\n     * The event callbacks applied to the socket.\r\n     */\n\n    _this.events = {};\n    /**\r\n     * User supplied callbacks for events on this channel.\r\n     */\n\n    _this.listeners = {};\n    _this.name = name;\n    _this.socket = socket;\n    _this.options = options;\n    _this.eventFormatter = new EventFormatter(_this.options.namespace);\n\n    _this.subscribe();\n\n    return _this;\n  }\n  /**\r\n   * Subscribe to a Socket.io channel.\r\n   */\n\n\n  _createClass(SocketIoChannel, [{\n    key: \"subscribe\",\n    value: function subscribe() {\n      this.socket.emit('subscribe', {\n        channel: this.name,\n        auth: this.options.auth || {}\n      });\n    }\n    /**\r\n     * Unsubscribe from channel and ubind event callbacks.\r\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.unbind();\n      this.socket.emit('unsubscribe', {\n        channel: this.name,\n        auth: this.options.auth || {}\n      });\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(event, callback) {\n      this.on(this.eventFormatter.format(event), callback);\n      return this;\n    }\n    /**\r\n     * Stop listening for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListening\",\n    value: function stopListening(event, callback) {\n      this.unbindEvent(this.eventFormatter.format(event), callback);\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription succeeds.\r\n     */\n\n  }, {\n    key: \"subscribed\",\n    value: function subscribed(callback) {\n      this.on('connect', function (socket) {\n        callback(socket);\n      });\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime an error occurs.\r\n     */\n\n  }, {\n    key: \"error\",\n    value: function error(callback) {\n      return this;\n    }\n    /**\r\n     * Bind the channel's socket to an event and store the callback.\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      var _this2 = this;\n\n      this.listeners[event] = this.listeners[event] || [];\n\n      if (!this.events[event]) {\n        this.events[event] = function (channel, data) {\n          if (_this2.name === channel && _this2.listeners[event]) {\n            _this2.listeners[event].forEach(function (cb) {\n              return cb(data);\n            });\n          }\n        };\n\n        this.socket.on(event, this.events[event]);\n      }\n\n      this.listeners[event].push(callback);\n      return this;\n    }\n    /**\r\n     * Unbind the channel's socket from all stored event callbacks.\r\n     */\n\n  }, {\n    key: \"unbind\",\n    value: function unbind() {\n      var _this3 = this;\n\n      Object.keys(this.events).forEach(function (event) {\n        _this3.unbindEvent(event);\n      });\n    }\n    /**\r\n     * Unbind the listeners for the given event.\r\n     */\n\n  }, {\n    key: \"unbindEvent\",\n    value: function unbindEvent(event, callback) {\n      this.listeners[event] = this.listeners[event] || [];\n\n      if (callback) {\n        this.listeners[event] = this.listeners[event].filter(function (cb) {\n          return cb !== callback;\n        });\n      }\n\n      if (!callback || this.listeners[event].length === 0) {\n        if (this.events[event]) {\n          this.socket.removeListener(event, this.events[event]);\n          delete this.events[event];\n        }\n\n        delete this.listeners[event];\n      }\n    }\n  }]);\n\n  return SocketIoChannel;\n}(Channel);\n\n/**\r\n * This class represents a Socket.io private channel.\r\n */\n\nvar SocketIoPrivateChannel = /*#__PURE__*/function (_SocketIoChannel) {\n  _inherits(SocketIoPrivateChannel, _SocketIoChannel);\n\n  var _super = _createSuper(SocketIoPrivateChannel);\n\n  function SocketIoPrivateChannel() {\n    _classCallCheck(this, SocketIoPrivateChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SocketIoPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n    function whisper(eventName, data) {\n      this.socket.emit('client event', {\n        channel: this.name,\n        event: \"client-\".concat(eventName),\n        data: data\n      });\n      return this;\n    }\n  }]);\n\n  return SocketIoPrivateChannel;\n}(SocketIoChannel);\n\n/**\r\n * This class represents a Socket.io presence channel.\r\n */\n\nvar SocketIoPresenceChannel = /*#__PURE__*/function (_SocketIoPrivateChann) {\n  _inherits(SocketIoPresenceChannel, _SocketIoPrivateChann);\n\n  var _super = _createSuper(SocketIoPresenceChannel);\n\n  function SocketIoPresenceChannel() {\n    _classCallCheck(this, SocketIoPresenceChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SocketIoPresenceChannel, [{\n    key: \"here\",\n    value:\n    /**\r\n     * Register a callback to be called anytime the member list changes.\r\n     */\n    function here(callback) {\n      this.on('presence:subscribed', function (members) {\n        callback(members.map(function (m) {\n          return m.user_info;\n        }));\n      });\n      return this;\n    }\n    /**\r\n     * Listen for someone joining the channel.\r\n     */\n\n  }, {\n    key: \"joining\",\n    value: function joining(callback) {\n      this.on('presence:joining', function (member) {\n        return callback(member.user_info);\n      });\n      return this;\n    }\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n\n  }, {\n    key: \"whisper\",\n    value: function whisper(eventName, data) {\n      this.socket.emit('client event', {\n        channel: this.name,\n        event: \"client-\".concat(eventName),\n        data: data\n      });\n      return this;\n    }\n    /**\r\n     * Listen for someone leaving the channel.\r\n     */\n\n  }, {\n    key: \"leaving\",\n    value: function leaving(callback) {\n      this.on('presence:leaving', function (member) {\n        return callback(member.user_info);\n      });\n      return this;\n    }\n  }]);\n\n  return SocketIoPresenceChannel;\n}(SocketIoPrivateChannel);\n\n/**\r\n * This class represents a null channel.\r\n */\n\nvar NullChannel = /*#__PURE__*/function (_Channel) {\n  _inherits(NullChannel, _Channel);\n\n  var _super = _createSuper(NullChannel);\n\n  function NullChannel() {\n    _classCallCheck(this, NullChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NullChannel, [{\n    key: \"subscribe\",\n    value:\n    /**\r\n     * Subscribe to a channel.\r\n     */\n    function subscribe() {//\n    }\n    /**\r\n     * Unsubscribe from a channel.\r\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {//\n    }\n    /**\r\n     * Listen for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(event, callback) {\n      return this;\n    }\n    /**\r\n     * Listen for all events on the channel instance.\r\n     */\n\n  }, {\n    key: \"listenToAll\",\n    value: function listenToAll(callback) {\n      return this;\n    }\n    /**\r\n     * Stop listening for an event on the channel instance.\r\n     */\n\n  }, {\n    key: \"stopListening\",\n    value: function stopListening(event, callback) {\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime a subscription succeeds.\r\n     */\n\n  }, {\n    key: \"subscribed\",\n    value: function subscribed(callback) {\n      return this;\n    }\n    /**\r\n     * Register a callback to be called anytime an error occurs.\r\n     */\n\n  }, {\n    key: \"error\",\n    value: function error(callback) {\n      return this;\n    }\n    /**\r\n     * Bind a channel to an event.\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      return this;\n    }\n  }]);\n\n  return NullChannel;\n}(Channel);\n\n/**\r\n * This class represents a null private channel.\r\n */\n\nvar NullPrivateChannel = /*#__PURE__*/function (_NullChannel) {\n  _inherits(NullPrivateChannel, _NullChannel);\n\n  var _super = _createSuper(NullPrivateChannel);\n\n  function NullPrivateChannel() {\n    _classCallCheck(this, NullPrivateChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NullPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n    function whisper(eventName, data) {\n      return this;\n    }\n  }]);\n\n  return NullPrivateChannel;\n}(NullChannel);\n\n/**\r\n * This class represents a null private channel.\r\n */\n\nvar NullEncryptedPrivateChannel = /*#__PURE__*/function (_NullChannel) {\n  _inherits(NullEncryptedPrivateChannel, _NullChannel);\n\n  var _super = _createSuper(NullEncryptedPrivateChannel);\n\n  function NullEncryptedPrivateChannel() {\n    _classCallCheck(this, NullEncryptedPrivateChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NullEncryptedPrivateChannel, [{\n    key: \"whisper\",\n    value:\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n    function whisper(eventName, data) {\n      return this;\n    }\n  }]);\n\n  return NullEncryptedPrivateChannel;\n}(NullChannel);\n\n/**\r\n * This class represents a null presence channel.\r\n */\n\nvar NullPresenceChannel = /*#__PURE__*/function (_NullPrivateChannel) {\n  _inherits(NullPresenceChannel, _NullPrivateChannel);\n\n  var _super = _createSuper(NullPresenceChannel);\n\n  function NullPresenceChannel() {\n    _classCallCheck(this, NullPresenceChannel);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(NullPresenceChannel, [{\n    key: \"here\",\n    value:\n    /**\r\n     * Register a callback to be called anytime the member list changes.\r\n     */\n    function here(callback) {\n      return this;\n    }\n    /**\r\n     * Listen for someone joining the channel.\r\n     */\n\n  }, {\n    key: \"joining\",\n    value: function joining(callback) {\n      return this;\n    }\n    /**\r\n     * Send a whisper event to other clients in the channel.\r\n     */\n\n  }, {\n    key: \"whisper\",\n    value: function whisper(eventName, data) {\n      return this;\n    }\n    /**\r\n     * Listen for someone leaving the channel.\r\n     */\n\n  }, {\n    key: \"leaving\",\n    value: function leaving(callback) {\n      return this;\n    }\n  }]);\n\n  return NullPresenceChannel;\n}(NullPrivateChannel);\n\nvar Connector = /*#__PURE__*/function () {\n  /**\r\n   * Create a new class instance.\r\n   */\n  function Connector(options) {\n    _classCallCheck(this, Connector);\n\n    /**\r\n     * Default connector options.\r\n     */\n    this._defaultOptions = {\n      auth: {\n        headers: {}\n      },\n      authEndpoint: '/broadcasting/auth',\n      userAuthentication: {\n        endpoint: '/broadcasting/user-auth',\n        headers: {}\n      },\n      broadcaster: 'pusher',\n      csrfToken: null,\n      bearerToken: null,\n      host: null,\n      key: null,\n      namespace: 'App.Events'\n    };\n    this.setOptions(options);\n    this.connect();\n  }\n  /**\r\n   * Merge the custom options with the defaults.\r\n   */\n\n\n  _createClass(Connector, [{\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      this.options = _extends(this._defaultOptions, options);\n      var token = this.csrfToken();\n\n      if (token) {\n        this.options.auth.headers['X-CSRF-TOKEN'] = token;\n        this.options.userAuthentication.headers['X-CSRF-TOKEN'] = token;\n      }\n\n      token = this.options.bearerToken;\n\n      if (token) {\n        this.options.auth.headers['Authorization'] = 'Bearer ' + token;\n        this.options.userAuthentication.headers['Authorization'] = 'Bearer ' + token;\n      }\n\n      return options;\n    }\n    /**\r\n     * Extract the CSRF token from the page.\r\n     */\n\n  }, {\n    key: \"csrfToken\",\n    value: function csrfToken() {\n      var selector;\n\n      if (typeof window !== 'undefined' && window['Laravel'] && window['Laravel'].csrfToken) {\n        return window['Laravel'].csrfToken;\n      } else if (this.options.csrfToken) {\n        return this.options.csrfToken;\n      } else if (typeof document !== 'undefined' && typeof document.querySelector === 'function' && (selector = document.querySelector('meta[name=\"csrf-token\"]'))) {\n        return selector.getAttribute('content');\n      }\n\n      return null;\n    }\n  }]);\n\n  return Connector;\n}();\n\n/**\r\n * This class creates a connector to Pusher.\r\n */\n\nvar PusherConnector = /*#__PURE__*/function (_Connector) {\n  _inherits(PusherConnector, _Connector);\n\n  var _super = _createSuper(PusherConnector);\n\n  function PusherConnector() {\n    var _this;\n\n    _classCallCheck(this, PusherConnector);\n\n    _this = _super.apply(this, arguments);\n    /**\r\n     * All of the subscribed channel names.\r\n     */\n\n    _this.channels = {};\n    return _this;\n  }\n  /**\r\n   * Create a fresh Pusher connection.\r\n   */\n\n\n  _createClass(PusherConnector, [{\n    key: \"connect\",\n    value: function connect() {\n      if (typeof this.options.client !== 'undefined') {\n        this.pusher = this.options.client;\n      } else if (this.options.Pusher) {\n        this.pusher = new this.options.Pusher(this.options.key, this.options);\n      } else {\n        this.pusher = new Pusher(this.options.key, this.options);\n      }\n    }\n    /**\r\n     * Sign in the user via Pusher user authentication (https://pusher.com/docs/channels/using_channels/user-authentication/).\r\n     */\n\n  }, {\n    key: \"signin\",\n    value: function signin() {\n      this.pusher.signin();\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(name, event, callback) {\n      return this.channel(name).listen(event, callback);\n    }\n    /**\r\n     * Get a channel instance by name.\r\n     */\n\n  }, {\n    key: \"channel\",\n    value: function channel(name) {\n      if (!this.channels[name]) {\n        this.channels[name] = new PusherChannel(this.pusher, name, this.options);\n      }\n\n      return this.channels[name];\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n\n  }, {\n    key: \"privateChannel\",\n    value: function privateChannel(name) {\n      if (!this.channels['private-' + name]) {\n        this.channels['private-' + name] = new PusherPrivateChannel(this.pusher, 'private-' + name, this.options);\n      }\n\n      return this.channels['private-' + name];\n    }\n    /**\r\n     * Get a private encrypted channel instance by name.\r\n     */\n\n  }, {\n    key: \"encryptedPrivateChannel\",\n    value: function encryptedPrivateChannel(name) {\n      if (!this.channels['private-encrypted-' + name]) {\n        this.channels['private-encrypted-' + name] = new PusherEncryptedPrivateChannel(this.pusher, 'private-encrypted-' + name, this.options);\n      }\n\n      return this.channels['private-encrypted-' + name];\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n\n  }, {\n    key: \"presenceChannel\",\n    value: function presenceChannel(name) {\n      if (!this.channels['presence-' + name]) {\n        this.channels['presence-' + name] = new PusherPresenceChannel(this.pusher, 'presence-' + name, this.options);\n      }\n\n      return this.channels['presence-' + name];\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n\n  }, {\n    key: \"leave\",\n    value: function leave(name) {\n      var _this2 = this;\n\n      var channels = [name, 'private-' + name, 'private-encrypted-' + name, 'presence-' + name];\n      channels.forEach(function (name, index) {\n        _this2.leaveChannel(name);\n      });\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(name) {\n      if (this.channels[name]) {\n        this.channels[name].unsubscribe();\n        delete this.channels[name];\n      }\n    }\n    /**\r\n     * Get the socket ID for the connection.\r\n     */\n\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return this.pusher.connection.socket_id;\n    }\n    /**\r\n     * Disconnect Pusher connection.\r\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.pusher.disconnect();\n    }\n  }]);\n\n  return PusherConnector;\n}(Connector);\n\n/**\r\n * This class creates a connnector to a Socket.io server.\r\n */\n\nvar SocketIoConnector = /*#__PURE__*/function (_Connector) {\n  _inherits(SocketIoConnector, _Connector);\n\n  var _super = _createSuper(SocketIoConnector);\n\n  function SocketIoConnector() {\n    var _this;\n\n    _classCallCheck(this, SocketIoConnector);\n\n    _this = _super.apply(this, arguments);\n    /**\r\n     * All of the subscribed channel names.\r\n     */\n\n    _this.channels = {};\n    return _this;\n  }\n  /**\r\n   * Create a fresh Socket.io connection.\r\n   */\n\n\n  _createClass(SocketIoConnector, [{\n    key: \"connect\",\n    value: function connect() {\n      var _this2 = this;\n\n      var io = this.getSocketIO();\n      this.socket = io(this.options.host, this.options);\n      this.socket.on('reconnect', function () {\n        Object.values(_this2.channels).forEach(function (channel) {\n          channel.subscribe();\n        });\n      });\n      return this.socket;\n    }\n    /**\r\n     * Get socket.io module from global scope or options.\r\n     */\n\n  }, {\n    key: \"getSocketIO\",\n    value: function getSocketIO() {\n      if (typeof this.options.client !== 'undefined') {\n        return this.options.client;\n      }\n\n      if (typeof io !== 'undefined') {\n        return io;\n      }\n\n      throw new Error('Socket.io client not found. Should be globally available or passed via options.client');\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(name, event, callback) {\n      return this.channel(name).listen(event, callback);\n    }\n    /**\r\n     * Get a channel instance by name.\r\n     */\n\n  }, {\n    key: \"channel\",\n    value: function channel(name) {\n      if (!this.channels[name]) {\n        this.channels[name] = new SocketIoChannel(this.socket, name, this.options);\n      }\n\n      return this.channels[name];\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n\n  }, {\n    key: \"privateChannel\",\n    value: function privateChannel(name) {\n      if (!this.channels['private-' + name]) {\n        this.channels['private-' + name] = new SocketIoPrivateChannel(this.socket, 'private-' + name, this.options);\n      }\n\n      return this.channels['private-' + name];\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n\n  }, {\n    key: \"presenceChannel\",\n    value: function presenceChannel(name) {\n      if (!this.channels['presence-' + name]) {\n        this.channels['presence-' + name] = new SocketIoPresenceChannel(this.socket, 'presence-' + name, this.options);\n      }\n\n      return this.channels['presence-' + name];\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n\n  }, {\n    key: \"leave\",\n    value: function leave(name) {\n      var _this3 = this;\n\n      var channels = [name, 'private-' + name, 'presence-' + name];\n      channels.forEach(function (name) {\n        _this3.leaveChannel(name);\n      });\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(name) {\n      if (this.channels[name]) {\n        this.channels[name].unsubscribe();\n        delete this.channels[name];\n      }\n    }\n    /**\r\n     * Get the socket ID for the connection.\r\n     */\n\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return this.socket.id;\n    }\n    /**\r\n     * Disconnect Socketio connection.\r\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.socket.disconnect();\n    }\n  }]);\n\n  return SocketIoConnector;\n}(Connector);\n\n/**\r\n * This class creates a null connector.\r\n */\n\nvar NullConnector = /*#__PURE__*/function (_Connector) {\n  _inherits(NullConnector, _Connector);\n\n  var _super = _createSuper(NullConnector);\n\n  function NullConnector() {\n    var _this;\n\n    _classCallCheck(this, NullConnector);\n\n    _this = _super.apply(this, arguments);\n    /**\r\n     * All of the subscribed channel names.\r\n     */\n\n    _this.channels = {};\n    return _this;\n  }\n  /**\r\n   * Create a fresh connection.\r\n   */\n\n\n  _createClass(NullConnector, [{\n    key: \"connect\",\n    value: function connect() {//\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(name, event, callback) {\n      return new NullChannel();\n    }\n    /**\r\n     * Get a channel instance by name.\r\n     */\n\n  }, {\n    key: \"channel\",\n    value: function channel(name) {\n      return new NullChannel();\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n\n  }, {\n    key: \"privateChannel\",\n    value: function privateChannel(name) {\n      return new NullPrivateChannel();\n    }\n    /**\r\n     * Get a private encrypted channel instance by name.\r\n     */\n\n  }, {\n    key: \"encryptedPrivateChannel\",\n    value: function encryptedPrivateChannel(name) {\n      return new NullEncryptedPrivateChannel();\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n\n  }, {\n    key: \"presenceChannel\",\n    value: function presenceChannel(name) {\n      return new NullPresenceChannel();\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n\n  }, {\n    key: \"leave\",\n    value: function leave(name) {//\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(name) {//\n    }\n    /**\r\n     * Get the socket ID for the connection.\r\n     */\n\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return 'fake-socket-id';\n    }\n    /**\r\n     * Disconnect the connection.\r\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {//\n    }\n  }]);\n\n  return NullConnector;\n}(Connector);\n\n/**\r\n * This class is the primary API for interacting with broadcasting.\r\n */\n\nvar Echo = /*#__PURE__*/function () {\n  /**\r\n   * Create a new class instance.\r\n   */\n  function Echo(options) {\n    _classCallCheck(this, Echo);\n\n    this.options = options;\n    this.connect();\n\n    if (!this.options.withoutInterceptors) {\n      this.registerInterceptors();\n    }\n  }\n  /**\r\n   * Get a channel instance by name.\r\n   */\n\n\n  _createClass(Echo, [{\n    key: \"channel\",\n    value: function channel(_channel) {\n      return this.connector.channel(_channel);\n    }\n    /**\r\n     * Create a new connection.\r\n     */\n\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      if (this.options.broadcaster == 'reverb') {\n        this.connector = new PusherConnector(_extends(_extends({}, this.options), {\n          cluster: ''\n        }));\n      } else if (this.options.broadcaster == 'pusher') {\n        this.connector = new PusherConnector(this.options);\n      } else if (this.options.broadcaster == 'socket.io') {\n        this.connector = new SocketIoConnector(this.options);\n      } else if (this.options.broadcaster == 'null') {\n        this.connector = new NullConnector(this.options);\n      } else if (typeof this.options.broadcaster == 'function' && isConstructor(this.options.broadcaster)) {\n        this.connector = new this.options.broadcaster(this.options);\n      } else {\n        throw new Error(\"Broadcaster \".concat(_typeof(this.options.broadcaster), \" \").concat(this.options.broadcaster, \" is not supported.\"));\n      }\n    }\n    /**\r\n     * Disconnect from the Echo server.\r\n     */\n\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.connector.disconnect();\n    }\n    /**\r\n     * Get a presence channel instance by name.\r\n     */\n\n  }, {\n    key: \"join\",\n    value: function join(channel) {\n      return this.connector.presenceChannel(channel);\n    }\n    /**\r\n     * Leave the given channel, as well as its private and presence variants.\r\n     */\n\n  }, {\n    key: \"leave\",\n    value: function leave(channel) {\n      this.connector.leave(channel);\n    }\n    /**\r\n     * Leave the given channel.\r\n     */\n\n  }, {\n    key: \"leaveChannel\",\n    value: function leaveChannel(channel) {\n      this.connector.leaveChannel(channel);\n    }\n    /**\r\n     * Leave all channels.\r\n     */\n\n  }, {\n    key: \"leaveAllChannels\",\n    value: function leaveAllChannels() {\n      for (var channel in this.connector.channels) {\n        this.leaveChannel(channel);\n      }\n    }\n    /**\r\n     * Listen for an event on a channel instance.\r\n     */\n\n  }, {\n    key: \"listen\",\n    value: function listen(channel, event, callback) {\n      return this.connector.listen(channel, event, callback);\n    }\n    /**\r\n     * Get a private channel instance by name.\r\n     */\n\n  }, {\n    key: \"private\",\n    value: function _private(channel) {\n      return this.connector.privateChannel(channel);\n    }\n    /**\r\n     * Get a private encrypted channel instance by name.\r\n     */\n\n  }, {\n    key: \"encryptedPrivate\",\n    value: function encryptedPrivate(channel) {\n      if (this.connector instanceof SocketIoConnector) {\n        throw new Error(\"Broadcaster \".concat(_typeof(this.options.broadcaster), \" \").concat(this.options.broadcaster, \" does not support encrypted private channels.\"));\n      }\n\n      return this.connector.encryptedPrivateChannel(channel);\n    }\n    /**\r\n     * Get the Socket ID for the connection.\r\n     */\n\n  }, {\n    key: \"socketId\",\n    value: function socketId() {\n      return this.connector.socketId();\n    }\n    /**\r\n     * Register 3rd party request interceptiors. These are used to automatically\r\n     * send a connections socket id to a Laravel app with a X-Socket-Id header.\r\n     */\n\n  }, {\n    key: \"registerInterceptors\",\n    value: function registerInterceptors() {\n      if (typeof Vue === 'function' && Vue.http) {\n        this.registerVueRequestInterceptor();\n      }\n\n      if (typeof axios === 'function') {\n        this.registerAxiosRequestInterceptor();\n      }\n\n      if (typeof jQuery === 'function') {\n        this.registerjQueryAjaxSetup();\n      }\n\n      if ((typeof Turbo === \"undefined\" ? \"undefined\" : _typeof(Turbo)) === 'object') {\n        this.registerTurboRequestInterceptor();\n      }\n    }\n    /**\r\n     * Register a Vue HTTP interceptor to add the X-Socket-ID header.\r\n     */\n\n  }, {\n    key: \"registerVueRequestInterceptor\",\n    value: function registerVueRequestInterceptor() {\n      var _this = this;\n\n      Vue.http.interceptors.push(function (request, next) {\n        if (_this.socketId()) {\n          request.headers.set('X-Socket-ID', _this.socketId());\n        }\n\n        next();\n      });\n    }\n    /**\r\n     * Register an Axios HTTP interceptor to add the X-Socket-ID header.\r\n     */\n\n  }, {\n    key: \"registerAxiosRequestInterceptor\",\n    value: function registerAxiosRequestInterceptor() {\n      var _this2 = this;\n\n      axios.interceptors.request.use(function (config) {\n        if (_this2.socketId()) {\n          config.headers['X-Socket-Id'] = _this2.socketId();\n        }\n\n        return config;\n      });\n    }\n    /**\r\n     * Register jQuery AjaxPrefilter to add the X-Socket-ID header.\r\n     */\n\n  }, {\n    key: \"registerjQueryAjaxSetup\",\n    value: function registerjQueryAjaxSetup() {\n      var _this3 = this;\n\n      if (typeof jQuery.ajax != 'undefined') {\n        jQuery.ajaxPrefilter(function (options, originalOptions, xhr) {\n          if (_this3.socketId()) {\n            xhr.setRequestHeader('X-Socket-Id', _this3.socketId());\n          }\n        });\n      }\n    }\n    /**\r\n     * Register the Turbo Request interceptor to add the X-Socket-ID header.\r\n     */\n\n  }, {\n    key: \"registerTurboRequestInterceptor\",\n    value: function registerTurboRequestInterceptor() {\n      var _this4 = this;\n\n      document.addEventListener('turbo:before-fetch-request', function (event) {\n        event.detail.fetchOptions.headers['X-Socket-Id'] = _this4.socketId();\n      });\n    }\n  }]);\n\n  return Echo;\n}();\n\nexport { Channel, Connector, EventFormatter, Echo as default };\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","import Echo from 'laravel-echo';\r\nimport socketio from 'socket.io-client';\r\n\r\nwindow.Echo = new Echo({\r\n    broadcaster: 'socket.io',\r\n    host: window.location.hostname + \":6001\",\r\n    transports: ['websocket'],\r\n});\r\n\r\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","_typeof","iterator","constructor","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","configurable","writable","_createClass","protoProps","staticProps","_extends","assign","arguments","source","apply","this","_inherits","subClass","superClass","create","_setPrototypeOf","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","p","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","_isNativeReflectConstruct","result","Super","NewTarget","Channel","event","callback","listen","stopListening","EventFormatter","namespace","includes","charAt","substring","replace","PusherChannel","_Channel","_super","pusher","name","options","_this","eventFormatter","subscribe","subscription","unsubscribe","on","format","_this2","bind_global","data","startsWith","formattedEvent","unbind","unbind_global","status","bind","PusherPrivateChannel","_PusherChannel","eventName","channels","trigger","concat","PusherEncryptedPrivateChannel","PusherPresenceChannel","_PusherPrivateChannel","keys","members","map","k","member","info","SocketIoChannel","socket","events","listeners","emit","channel","auth","unbindEvent","forEach","cb","push","_this3","filter","removeListener","SocketIoPrivateChannel","_SocketIoChannel","SocketIoPresenceChannel","_SocketIoPrivateChann","m","user_info","NullChannel","NullPrivateChannel","_NullChannel","NullEncryptedPrivateChannel","NullPresenceChannel","_NullPrivateChannel","Connector","_defaultOptions","headers","authEndpoint","userAuthentication","endpoint","broadcaster","csrfToken","bearerToken","host","setOptions","connect","token","selector","window","document","querySelector","getAttribute","PusherConnector","_Connector","client","Pusher","signin","index","leaveChannel","connection","socket_id","disconnect","SocketIoConnector","io","getSocketIO","values","Error","id","NullConnector","Echo","withoutInterceptors","registerInterceptors","_channel","connector","cluster","err","message","isConstructor","presenceChannel","leave","privateChannel","encryptedPrivateChannel","socketId","Vue","http","registerVueRequestInterceptor","axios","registerAxiosRequestInterceptor","jQuery","registerjQueryAjaxSetup","Turbo","registerTurboRequestInterceptor","interceptors","request","next","set","use","config","ajax","ajaxPrefilter","originalOptions","xhr","setRequestHeader","_this4","addEventListener","detail","fetchOptions","PACKET_TYPES","PACKET_TYPES_REVERSE","ERROR_PACKET","type","withNativeBlob","Blob","toString","withNativeArrayBuffer","ArrayBuffer","isView","buffer","encodePacket","supportsBinary","encodeBlobAsBase64","fileReader","FileReader","onload","content","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","chars","lookup","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","decodeBase64Packet","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","createPacketEncoderStream","TransformStream","transform","packet","controller","arrayBuffer","then","encoded","TextEncoder","encode","encodePacketToBinary","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","Emitter","mixin","fn","_callbacks","once","off","removeAllListeners","removeEventListener","callbacks","splice","args","Array","emitReserved","hasListeners","nextTick","Promise","resolve","setTimeoutFn","globalThisShim","Function","pick","attr","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","clearTimeoutFn","randomString","Date","now","Math","random","TransportError","reason","description","context","super","Transport","query","forceBase64","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","str","encodeURIComponent","_polling","_poll","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","join","encodePayload","doWrite","uri","timestampRequests","timestampParam","sid","b64","XMLHttpRequest","hasCORS","empty","BaseXHR","location","isSSL","protocol","xd","req","method","xhrStatus","pollXhr","Request","createRequest","_opts","_method","_uri","_data","undefined","_create","_a","xdomain","_xhr","extraHeaders","setDisableHeaderCheck","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","getResponseHeader","_onLoad","_onError","_index","requestsCount","requests","_cleanup","fromError","abort","responseText","attachEvent","unloadHandler","hasXHR2","newRequest","responseType","isReactNative","navigator","product","toLowerCase","BaseWS","protocols","ws","createSocket","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","WebSocketCtor","WebSocket","MozWebSocket","transports","websocket","_packet","webtransport","_transport","WebTransport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","_writer","getWriter","read","done","polling","re","parts","parse","src","b","exec","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","withEventListeners","OFFLINE_EVENT_LISTENERS","listener","SocketWithoutUpgrade","writeBuffer","_prevBufferLen","_pingInterval","_pingTimeout","_maxPayload","_pingTimeoutTime","Infinity","parsedUri","_transportsByName","t","transportName","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","_beforeunloadEventListener","transport","_offlineEventListener","_onClose","_cookieJar","createCookieJar","_open","createTransport","EIO","priorWebsocketSuccess","setTransport","_onDrain","_onPacket","flush","onHandshake","JSON","_sendPacket","_resetPingTimeout","code","pingInterval","pingTimeout","_pingTimeoutTimer","delay","upgrading","_getWritablePackets","payloadSize","c","utf8Length","ceil","_hasPingExpired","hasExpired","msg","compress","cleanupAndClose","waitForUpgrade","tryAllTransports","SocketWithUpgrade","_upgrades","_probe","failed","onTransportOpen","cleanup","freezeTransport","error","onTransportClose","onupgrade","to","_filterUpgrades","upgrades","filteredUpgrades","Socket","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","num","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","freeze","connect_error","disconnecting","newListener","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","_b","_c","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","isConnected","notifyOutgoingListeners","ackTimeout","timer","withError","emitWithAck","reject","arg1","arg2","tryCount","pending","responseArgs","_drainQueue","force","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","some","onconnect","onevent","onack","ondisconnect","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","deviation","floor","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","skipReconnect","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex"],"sourceRoot":""}